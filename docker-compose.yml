version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: add-wishlist-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: add-wishlist-api
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - API_HOST=0.0.0.0
      - API_PORT=8000
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src  # Mount source code for development
    command: ["python", "-m", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: add-wishlist-celery-worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src  # Mount source code for development
    command: ["celery", "-A", "src.celery_app", "worker", "--loglevel=info", "--concurrency=2"]
    restart: unless-stopped

  # Celery beat scheduler
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: add-wishlist-celery-beat
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src  # Mount source code for development
      - celery_beat_data:/app/celerybeat-schedule
    command: ["celery", "-A", "src.celery_app", "beat", "--loglevel=info"]
    restart: unless-stopped

  # Flower monitoring (optional)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: add-wishlist-flower
    ports:
      - "5555:5555"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src  # Mount source code for development
    command: ["celery", "-A", "src.celery_app", "flower", "--port=5555"]
    restart: unless-stopped

volumes:
  redis_data:
  celery_beat_data:

networks:
  default:
    name: add-wishlist-network
